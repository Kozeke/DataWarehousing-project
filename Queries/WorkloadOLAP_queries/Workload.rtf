{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 INSTRUCTIONS:\
\
You can copy the queries, according to the workload, one by one in a query tool's window of PostgresSQL after the creation of all the tables and look the results.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 								QUERY WORKLOAD\
\
\
1) SELECT nation, gdp, nbr_medal FROM  "LogicalSchema_Project_DW".nation_dt  where gdp is not null order by Gdp desc\
\
2) SELECT "LogicalSchema_Project_DW".athlete_dt.team, "LogicalSchema_Project_DW".athlete_dt.name, "LogicalSchema_Project_DW".olympic_events_ft.medal FROM\
"LogicalSchema_Project_DW".olympic_events_ft join "LogicalSchema_Project_DW".athlete_dt on "LogicalSchema_Project_DW".olympic_events_ft.id_athlete = "LogicalSchema_Project_DW".athlete_dt.id_athlete \
where (medal != 'NA' AND team ='Afghanistan' AND sex = 'F') OR (medal != 'NA' AND team ='Iran' AND sex = 'F') OR (medal != 'NA' AND team ='Iraq' AND sex = 'F')\
\
3) Select team, year, count(medal) as nbr_medals\
FROM\
"LogicalSchema_Project_DW".olympic_events_ft \
join "LogicalSchema_Project_DW".athlete_dt on \
"LogicalSchema_Project_DW".olympic_events_ft.id_athlete = "LogicalSchema_Project_DW".athlete_dt.id_athlete \
where team = 'United States' and medal != 'NA'\
GROUP BY (team, year)\
order by year asc\
\
4) SELECT nation, population, nbr_medal FROM "LogicalSchema_Project_DW".nation_dt\
where population >= 80000000\
\
5) SELECT nation, nbr_SO_medal, nbr_WO_medal FROM\
"LogicalSchema_Project_DW".nation_dt\
WHERE nbr_SO_medal >= 50\
\
6) SELECT nation, most_succ_sport FROM\
"LogicalSchema_Project_DW".nation_dt\
WHERE code = 'NOR' OR code = 'SWE' OR code = 'FIN' OR code = 'DEN' OR code = 'ISL' OR code = 'IRL'\
\
7) SELECT nation, nbr_medal FROM "LogicalSchema_Project_DW".nation_dt\
order by nbr_medal desc\
limit 10\
\
8) SELECT nation, gdp, count(name) as nbr_athletes FROM "LogicalSchema_Project_DW".olympic_events_ft \
join\
(\
	SELECT * FROM "LogicalSchema_Project_DW".athlete_dt join "LogicalSchema_Project_DW".nation_dt on\
	"LogicalSchema_Project_DW".athlete_dt.code = "LogicalSchema_Project_DW".nation_dt.code\
) as t1 on "LogicalSchema_Project_DW".olympic_events_ft.id_athlete = t1.id_athlete\
where gdp is not null and gdp >= 20000\
GROUP BY (nation, gdp) order by gdp Desc  \
\
9) (\
	SELECT sport, year, count(event) as nbr_event FROM \
	"LogicalSchema_Project_DW".event_dt join "LogicalSchema_Project_DW".olympic_events_ft  \
	on "LogicalSchema_Project_DW".event_dt.id_event = "LogicalSchema_Project_DW".olympic_events_ft.id_event\
	where year = 1896\
	group by (sport, year)\
	order by nbr_event desc\
	limit 1\
)\
UNION\
(\
	SELECT sport, year, count(event) as nbr_event FROM \
	"LogicalSchema_Project_DW".event_dt join "LogicalSchema_Project_DW".olympic_events_ft  \
	on "LogicalSchema_Project_DW".event_dt.id_event = "LogicalSchema_Project_DW".olympic_events_ft.id_event\
	where year = 2016\
	group by (sport, year)\
	order by nbr_event desc\
	limit 1\
)}